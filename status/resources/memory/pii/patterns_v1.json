{
  "version": "v1",
  "engine": "rust_regex",
  "updated_at": "2025-08-21T00:00:00Z",
  "notes": [
    "Seed patterns for PII redaction. Keep patterns conservative to reduce false positives.",
    "Regex dialect assumed: Rust (RE2-like). Avoid catastrophic backtracking.",
    "Downstream code should honor `enabled`, `severity`, and `strategy` when applying redactions."
  ],
  "defaults": {
    "enabled": true,
    "severity": "high",
    "strategy": "mask_full",
    "replacement": "[REDACTED]"
  },
  "patterns": [
    {
      "id": "email_basic",
      "kind": "email",
      "description": "Standard email addresses",
      "enabled": true,
      "severity": "high",
      "strategy": "mask_keep_domain",
      "replacement": "[REDACTED_EMAIL]@$2",
      "regex": "(?i)(?<![A-Z0-9._%+\\-])([A-Z0-9._%+\\-]+)@([A-Z0-9.-]+\\.[A-Z]{2,})(?![A-Z0-9._%+\\-])",
      "flags": "i",
      "examples": [
        "john.doe@example.com",
        "USER+tag@Sub.Domain.co.uk"
      ],
      "false_positives": [
        "not-an-email@",
        "user@@example.com"
      ]
    },
    {
      "id": "phone_intl_kor",
      "kind": "phone",
      "description": "International/KR phone numbers with separators. Matches +82-10-1234-5678, 010-1234-5678, (02) 1234-5678, 02-123-4567",
      "enabled": true,
      "severity": "high",
      "strategy": "mask_keep_last4",
      "replacement": "[REDACTED_PHONE]****$4",
      "regex": "(?x)(?<!\\d)(?:\\+?\\d{1,3}[.\\-\\s]?)?(?:\\(?(\\d{2,4})\\)?[.\\-\\s]?)?(\\d{3,4})[.\\-\\s]?(\\d{3,4})(?!\\d)",
      "flags": "x",
      "examples": [
        "+82-10-1234-5678",
        "010-1234-5678",
        "(02) 1234-5678",
        "02-123-4567"
      ],
      "false_positives": [
        "Version 1.2.3-rc1",
        "Order 123-ABC-456"
      ]
    },
    {
      "id": "credit_card_brandish",
      "kind": "card",
      "description": "Common card formats (Visa/Mastercard/Amex/Discover-like) with optional separators",
      "enabled": true,
      "severity": "critical",
      "strategy": "mask_keep_last4",
      "replacement": "[REDACTED_CARD]****$4",
      "regex": "(?x)\n(?<!\\d)(?:\n  (4\\d{3})                # Visa BIN\n  |(5[1-5]\\d{2})          # MC BIN\n  |(3[47]\\d{2})           # AmEx BIN\n  |(6(?:011|5\\d{2}))      # Discover-ish\n)\n[\\s\\-]?\\d{4}[\\s\\-]?\\d{4}[\\s\\-]?(\\d{3,4})(?!\\d)",
      "flags": "x",
      "examples": [
        "4111 1111 1111 1234",
        "5500-0000-0000-9876",
        "3782 822463 10005"
      ],
      "false_positives": [
        "Ticket 4000-ABCD-8888",
        "Ref 3782-XYZ"
      ]
    },
    {
      "id": "credit_card_generic_guarded",
      "kind": "card",
      "description": "Generic 13-19 digit sequences with separators (fallback). Disabled by default due to FP risk.",
      "enabled": false,
      "severity": "critical",
      "strategy": "mask_keep_last4",
      "replacement": "[REDACTED_CARD]****$1",
      "regex": "(?x)(?<!\\d)(?:\\d[\\s\\-]?){12,18}(\\d)(?!\\d)",
      "flags": "x",
      "examples": [
        "1234-5678-9012-3456",
        "1234 5678 9012 345"
      ],
      "false_positives": [
        "Long numeric codes that are not cards"
      ]
    },
    {
      "id": "kr_rrn_basic",
      "kind": "id",
      "description": "Korean Resident Registration Number (RRN) basic pattern YYMMDD-XXXXXXX",
      "enabled": true,
      "severity": "critical",
      "strategy": "mask_full",
      "replacement": "[REDACTED_KR_RRN]",
      "regex": "(?<!\\d)\\d{6}-\\d{7}(?!\\d)",
      "flags": "",
      "examples": [
        "900101-1234567",
        "021231-4567890"
      ],
      "false_positives": [
        "202301-1234567 (not DOB format)"
      ]
    },
    {
      "id": "passport_generic",
      "kind": "id",
      "description": "Generic passport-like IDs (8-9 alphanumerics). Experimental; disabled by default.",
      "enabled": false,
      "severity": "high",
      "strategy": "mask_partial",
      "replacement": "[REDACTED_PPT]***$1",
      "regex": "(?i)(?<![A-Z0-9])[A-Z0-9]{7}([A-Z0-9]{1,2})(?![A-Z0-9])",
      "flags": "i",
      "examples": [
        "M12345678",
        "A1234567"
      ],
      "false_positives": [
        "Random hashes or order codes"
      ]
    }
  ],
  "strategies": {
    "mask_full": {
      "description": "Replace entire match with replacement token"
    },
    "mask_keep_last4": {
      "description": "Replace all but last 4 digits with replacement prefix"
    },
    "mask_keep_domain": {
      "description": "For emails: replace local-part, keep domain"
    },
    "mask_partial": {
      "description": "Keep a small suffix portion for traceability"
    }
  },
  "testing": {
    "notes": "Downstream test harness should apply patterns in order, skip disabled, and prefer high-specificity matches first.",
    "ordering": [
      "kr_rrn_basic",
      "credit_card_brandish",
      "email_basic",
      "phone_intl_kor",
      "passport_generic",
      "credit_card_generic_guarded"
    ]
  }
}
