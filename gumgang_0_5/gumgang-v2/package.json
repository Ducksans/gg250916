{
  "name": "gumgang-v2",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "node start-dev.js",
    "dev:original": "next dev --turbopack",
    "dev:fixed": "PORT=3000 next dev -p 3000 --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "tauri": "tauri",
    "tauri:dev": "tauri dev",
    "tauri:build": "tauri build",
    "ci:sanity": "bash scripts/ci/sanity.sh",
    "guard:scan": "rg -n \"as any|@ts-ignore|@ts-expect-error(?!:)\" -g \"!node_modules\" || true",
    "preflight:linux": "bash scripts/ci/linux_preflight.sh",
    "bridge:open": "node -e \"(async()=>{try{const http=require('http');const https=require('https');const u=new URL(process.env.BRIDGE_URL||'http://localhost:3037');const args=process.argv.slice(3);const root=args[0]||'status';const p=args[1]||'';if(!p){console.error('Usage: npm run bridge:open -- <root> <relativePath>');process.exit(2);}const data=JSON.stringify({root:root,path:p});const mod=u.protocol==='https:'?https:http;const req=mod.request({hostname:u.hostname,port:u.port||((u.protocol==='https:')?443:80),path:'/api/open',method:'POST',headers:{'Content-Type':'application/json','Content-Length':Buffer.byteLength(data)}},res=>{let b='';res.on('data',d=>b+=d);res.on('end',()=>{console.log(b||res.statusCode);});});req.on('error',e=>{console.error(e.message);process.exit(1);});req.write(data);req.end();}catch(e){console.error(e&&e.message||e);process.exit(1);}})();\"",
    "overlay:on": "node -e \"(function(){try{const fs=require('fs'),path=require('path');const root=path.resolve(__dirname,'../../ui/overlays');const labs=path.join(root,'labs');function cp(a,b){const s=path.join(labs,a),d=path.join(root,b);if(fs.existsSync(s)){fs.mkdirSync(root,{recursive:true});fs.copyFileSync(s,d);console.log('copied',a,'->',b);}else{console.log('skip',a);}}cp('default.css','active.css');cp('default.js','active.js');}catch(e){console.error(e&&e.message||e);process.exit(1);}})();\"",
    "overlay:off": "node -e \"(function(){try{const fs=require('fs'),path=require('path');const root=path.resolve(__dirname,'../../ui/overlays');['active.css','active.js'].forEach(function(f){try{fs.unlinkSync(path.join(root,f));console.log('removed',f);}catch(_){}});}catch(e){console.error(e&&e.message||e);process.exit(1);}})();\"",
    "preflight:linux:save": "node scripts/ci/save_preflight_linux.js",
    "build:plan": "node scripts/ci/build_plan_probe.js",
    "tauri:probe": "node scripts/ci/tauri_probe.js",
    "build:export": "npm run build && npx next export -o out"
  },
  "dependencies": {
    "@arco-design/web-react": "^2.66.3",
    "@heroicons/react": "^2.2.0",
    "@monaco-editor/react": "^4.7.0",
    "@react-three/drei": "^10.6.1",
    "@react-three/fiber": "^9.3.0",
    "@tanstack/react-query": "^5.84.1",
    "@tauri-apps/plugin-dialog": "^2.3.2",
    "@types/socket.io-client": "^1.4.36",
    "@types/three": "^0.179.0",
    "axios": "^1.11.0",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "jotai": "^2.13.0",
    "lucide-react": "^0.536.0",
    "monaco-editor": "^0.52.2",
    "next": "15.4.6",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^3.3.1",
    "three": "^0.179.1",
    "valtio": "^2.1.5",
    "xterm": "^5.3.0",
    "xterm-addon-fit": "^0.8.0"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4",
    "@tauri-apps/api": "^2.7.0",
    "@tauri-apps/cli": "^2.7.1",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "tailwindcss": "^4",
    "typescript": "^5"
  }
}
